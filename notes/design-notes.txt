 
 
    
     
     
    +--------------------------------------------------------------------------------------------------------+
    |                                                                                                        |
    | GET           TRANSFORM             OUTPUT                                                             |
    |                                                                                                        |
    |                                                                                                        |
    +--------------------------------------------------------------------------------------------------------+
     
     
    GET
    transport: (ssh, https, snmp, ...)


    TRANSFORM
    input: stdin [, optional arguments via command line, etc. to
        provide for parameterization [from FEEDBACK, ...]]
    output: one or more (named?) streams

    what is the api? how can we allow arbitrary scripts/execs as transform plugins
    with minimal boilerplate, etc.?


    OUTPUT/COLLECTION

    maybe, instead of "output" this is more like the connector between
    states/blocks, allowing more arbitrary/programmable routes for data


    [FEEDBACK]

                                     ____ +--------------+
    +-----+      +-----------+  ____/     | OUTPUT       |
    | GET | ---> | TRANSFORM |  ____------+--------------+---->  [key value, csv, flume, ...]
    +-----+      +-+---------+      \___--+---+          |         
       ^           ^                      +---+----------+
       |           |                          |
       |           | +--------+               |
       +-----------+-+FEEDBACK|<--------------+
                     +--------+               
                                              
    Poll:
        Get_a
        Get_b

        Tra_x
        Tra_y
    
    ---------------------------------

    GET has simple requirements, and each instance could be easily
    implemented in anything, including shell script.
    TRA could benefit from additional structure: one stream in, but
    potentially >1 stream out. some options:
      * could write TRA as python plugin (template subclass, overriding
        methods as needed). declaring "type" of TRA could allow dropping
        in anything that returns csv (or similar convention) to provide
        different streams. 
     
    ---------------------------------
     
    an api that would allow transforms to be written in anything could be...
    output to stdout as csv the following:
    fact_name,fact_value,fact_store
    os_type,linux,

    fact_value is the inline value of the fact, if left empty, then we look for
    fact_store we should specify as one of the following:

    path to file whose contents comprise fact_value
    or
    key to use to lookup value in database. thought: this could be a git sha
    or...


